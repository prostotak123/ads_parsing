x-core-build: &core-build
  build:
    context: ./core_service
    dockerfile: Dockerfile.dev
  image: ads_project-core_image
  volumes:
    - ./core_service:/app
    - playwright_cache:/root/.cache/ms-playwright

  env_file:
    - .env

services:
  auth_service:
    container_name: ads_project-auth_service
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    command: [ "python3.12", "-m", "debugpy", "--listen", "0.0.0.0:5678", "manage.py", "runserver", "0.0.0.0:8000" ]
    ports:
      - "127.0.0.1:8080:8000"
      - "127.0.0.1:5678:5678"
    volumes:
      - ./auth_service:/app
    depends_on:
      - db_auth
    env_file:
      - .env

  core_service:
    <<: *core-build
    command: >
      sh -c "python3.12 -m debugpy --listen 0.0.0.0:5679 manage.py runserver 0.0.0.0:8001"
    ports:
      - "127.0.0.1:8081:8001"
      - "127.0.0.1:5679:5679"
    depends_on:
      - redis
      - db_core

  core_worker:
    <<: *core-build
    command: >
      sh -c "python3.12 -m debugpy --listen 0.0.0.0:5680 -m celery -A core_project worker --loglevel=info --pool=processes --concurrency=2"
    ports:
      - "127.0.0.1:5680:5680"
    depends_on:
      - redis
      - db_core
      - core_service

  core_beat:
    <<: *core-build
    command: celery -A core_project beat --loglevel=info
    depends_on:
      - redis
      - db_core
      - core_service

  flower:
    <<: *core-build
    command: celery -A core_project.celery_app flower --port=5555
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      - redis
      - core_worker
      - core_service
      - core_beat

    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  redis:
    image: redis:7-alpine
    ports:
      - "127.0.0.1:6379:6379"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  db_auth:
    image: postgres:15
    container_name: ads_project-db_auth
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
    volumes:
      - pg_db_auth:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  db_core:
    image: postgres:15
    container_name: ads_project-db_core
    environment:
      POSTGRES_DB: ${CORE_POSTGRES_DB}
      POSTGRES_USER: ${CORE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CORE_POSTGRES_PASSWORD}
    volumes:
      - pg_data_core:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"

volumes:
  pg_data_core:
  pg_db_auth:
  playwright_cache:
